--- a/node_modules/react-joyride/dist/index.mjs
+++ b/node_modules/react-joyride/dist/index.mjs
@@ -1,6 +1,6 @@
 import React, { useReducer, useEffect, useMemo, useCallback, useRef } from 'react';
 import { Animate } from 'react-simple-animate';
-import ReactDOM from 'react-dom';
+import { createPortal, createRoot } from 'react-dom/client';
 import Floater from 'react-floater';
 import { canUseDOM, getElement, isElement, scrollParent, hasPosition, isFixed, getStyle } from 'react-floater/lib/utils';
 import status from 'react-floater/lib/status';
@@ -522,23 +522,22 @@
   }, [run, stepIndex, setStatus, lifecycle]);
   useEffect(() => {
     if (!portal.current && canUseDOM()) {
-      portal.current = document.createElement("div");
-      portal.current.id = `joyride-portal-${getUniqueId()}`;
-      if (continuous) {
-        document.body.appendChild(portal.current);
-      }
+      const portalElement = document.createElement('div');
+      portalElement.id = `joyride-portal-${getUniqueId()}`;
+      document.body.appendChild(portalElement);
+      portal.current = createRoot(portalElement);
     }
     return () => {
-      /* istanbul ignore else */
-      if (!continuous && portal.current) {
-        /* istanbul ignore else */
-        // unmountComponentAtNode is not in react-dom/client
-        ReactDOM.unmountComponentAtNode(portal.current);
+      if (portal.current) {
+        portal.current.unmount();
+        portal.current = null;
       }
     };
-  }, [continuous]);
+  }, []);
   const rendered = useMemo(() => {
     if (!run || !isMounted) {
       return null;
@@ -547,15 +546,14 @@
     return /* @__PURE__ */ React.createElement(JoyridePortal, {
       debug,
       portal: portal.current,
-      continuous,
       getPopper,
       isTourSkipped
     }, renderedTooltip);
-  }, [isMounted, run, stepIndex, styles, isTourSkipped]);
-  if (continuous) {
-    ReactDOM.unstable_renderSubtreeIntoContainer(this, rendered, portal.current);
-    return null;
+  }, [isMounted, run, stepIndex, styles, isTourSkipped, debug, getPopper]);
+
+  if (portal.current) {
+    portal.current.render(rendered);
   }
-  return rendered;
+  return null;
 }
 
 Joyride.displayName = 'Joyride';
